// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package trustregistryv1

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_TrustRegistry                protoreflect.MessageDescriptor
	fd_TrustRegistry_did            protoreflect.FieldDescriptor
	fd_TrustRegistry_controller     protoreflect.FieldDescriptor
	fd_TrustRegistry_created        protoreflect.FieldDescriptor
	fd_TrustRegistry_modified       protoreflect.FieldDescriptor
	fd_TrustRegistry_deposit        protoreflect.FieldDescriptor
	fd_TrustRegistry_aka            protoreflect.FieldDescriptor
	fd_TrustRegistry_active_version protoreflect.FieldDescriptor
	fd_TrustRegistry_language       protoreflect.FieldDescriptor
)

func init() {
	file_pratikasr_trustregistry_v1_types_proto_init()
	md_TrustRegistry = File_pratikasr_trustregistry_v1_types_proto.Messages().ByName("TrustRegistry")
	fd_TrustRegistry_did = md_TrustRegistry.Fields().ByName("did")
	fd_TrustRegistry_controller = md_TrustRegistry.Fields().ByName("controller")
	fd_TrustRegistry_created = md_TrustRegistry.Fields().ByName("created")
	fd_TrustRegistry_modified = md_TrustRegistry.Fields().ByName("modified")
	fd_TrustRegistry_deposit = md_TrustRegistry.Fields().ByName("deposit")
	fd_TrustRegistry_aka = md_TrustRegistry.Fields().ByName("aka")
	fd_TrustRegistry_active_version = md_TrustRegistry.Fields().ByName("active_version")
	fd_TrustRegistry_language = md_TrustRegistry.Fields().ByName("language")
}

var _ protoreflect.Message = (*fastReflection_TrustRegistry)(nil)

type fastReflection_TrustRegistry TrustRegistry

func (x *TrustRegistry) ProtoReflect() protoreflect.Message {
	return (*fastReflection_TrustRegistry)(x)
}

func (x *TrustRegistry) slowProtoReflect() protoreflect.Message {
	mi := &file_pratikasr_trustregistry_v1_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_TrustRegistry_messageType fastReflection_TrustRegistry_messageType
var _ protoreflect.MessageType = fastReflection_TrustRegistry_messageType{}

type fastReflection_TrustRegistry_messageType struct{}

func (x fastReflection_TrustRegistry_messageType) Zero() protoreflect.Message {
	return (*fastReflection_TrustRegistry)(nil)
}
func (x fastReflection_TrustRegistry_messageType) New() protoreflect.Message {
	return new(fastReflection_TrustRegistry)
}
func (x fastReflection_TrustRegistry_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_TrustRegistry
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_TrustRegistry) Descriptor() protoreflect.MessageDescriptor {
	return md_TrustRegistry
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_TrustRegistry) Type() protoreflect.MessageType {
	return _fastReflection_TrustRegistry_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_TrustRegistry) New() protoreflect.Message {
	return new(fastReflection_TrustRegistry)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_TrustRegistry) Interface() protoreflect.ProtoMessage {
	return (*TrustRegistry)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_TrustRegistry) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Did != "" {
		value := protoreflect.ValueOfString(x.Did)
		if !f(fd_TrustRegistry_did, value) {
			return
		}
	}
	if x.Controller != "" {
		value := protoreflect.ValueOfString(x.Controller)
		if !f(fd_TrustRegistry_controller, value) {
			return
		}
	}
	if x.Created != nil {
		value := protoreflect.ValueOfMessage(x.Created.ProtoReflect())
		if !f(fd_TrustRegistry_created, value) {
			return
		}
	}
	if x.Modified != nil {
		value := protoreflect.ValueOfMessage(x.Modified.ProtoReflect())
		if !f(fd_TrustRegistry_modified, value) {
			return
		}
	}
	if x.Deposit != int64(0) {
		value := protoreflect.ValueOfInt64(x.Deposit)
		if !f(fd_TrustRegistry_deposit, value) {
			return
		}
	}
	if x.Aka != "" {
		value := protoreflect.ValueOfString(x.Aka)
		if !f(fd_TrustRegistry_aka, value) {
			return
		}
	}
	if x.ActiveVersion != int32(0) {
		value := protoreflect.ValueOfInt32(x.ActiveVersion)
		if !f(fd_TrustRegistry_active_version, value) {
			return
		}
	}
	if x.Language != "" {
		value := protoreflect.ValueOfString(x.Language)
		if !f(fd_TrustRegistry_language, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_TrustRegistry) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "pratikasr.trustregistry.v1.TrustRegistry.did":
		return x.Did != ""
	case "pratikasr.trustregistry.v1.TrustRegistry.controller":
		return x.Controller != ""
	case "pratikasr.trustregistry.v1.TrustRegistry.created":
		return x.Created != nil
	case "pratikasr.trustregistry.v1.TrustRegistry.modified":
		return x.Modified != nil
	case "pratikasr.trustregistry.v1.TrustRegistry.deposit":
		return x.Deposit != int64(0)
	case "pratikasr.trustregistry.v1.TrustRegistry.aka":
		return x.Aka != ""
	case "pratikasr.trustregistry.v1.TrustRegistry.active_version":
		return x.ActiveVersion != int32(0)
	case "pratikasr.trustregistry.v1.TrustRegistry.language":
		return x.Language != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: pratikasr.trustregistry.v1.TrustRegistry"))
		}
		panic(fmt.Errorf("message pratikasr.trustregistry.v1.TrustRegistry does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TrustRegistry) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "pratikasr.trustregistry.v1.TrustRegistry.did":
		x.Did = ""
	case "pratikasr.trustregistry.v1.TrustRegistry.controller":
		x.Controller = ""
	case "pratikasr.trustregistry.v1.TrustRegistry.created":
		x.Created = nil
	case "pratikasr.trustregistry.v1.TrustRegistry.modified":
		x.Modified = nil
	case "pratikasr.trustregistry.v1.TrustRegistry.deposit":
		x.Deposit = int64(0)
	case "pratikasr.trustregistry.v1.TrustRegistry.aka":
		x.Aka = ""
	case "pratikasr.trustregistry.v1.TrustRegistry.active_version":
		x.ActiveVersion = int32(0)
	case "pratikasr.trustregistry.v1.TrustRegistry.language":
		x.Language = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: pratikasr.trustregistry.v1.TrustRegistry"))
		}
		panic(fmt.Errorf("message pratikasr.trustregistry.v1.TrustRegistry does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_TrustRegistry) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "pratikasr.trustregistry.v1.TrustRegistry.did":
		value := x.Did
		return protoreflect.ValueOfString(value)
	case "pratikasr.trustregistry.v1.TrustRegistry.controller":
		value := x.Controller
		return protoreflect.ValueOfString(value)
	case "pratikasr.trustregistry.v1.TrustRegistry.created":
		value := x.Created
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "pratikasr.trustregistry.v1.TrustRegistry.modified":
		value := x.Modified
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "pratikasr.trustregistry.v1.TrustRegistry.deposit":
		value := x.Deposit
		return protoreflect.ValueOfInt64(value)
	case "pratikasr.trustregistry.v1.TrustRegistry.aka":
		value := x.Aka
		return protoreflect.ValueOfString(value)
	case "pratikasr.trustregistry.v1.TrustRegistry.active_version":
		value := x.ActiveVersion
		return protoreflect.ValueOfInt32(value)
	case "pratikasr.trustregistry.v1.TrustRegistry.language":
		value := x.Language
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: pratikasr.trustregistry.v1.TrustRegistry"))
		}
		panic(fmt.Errorf("message pratikasr.trustregistry.v1.TrustRegistry does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TrustRegistry) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "pratikasr.trustregistry.v1.TrustRegistry.did":
		x.Did = value.Interface().(string)
	case "pratikasr.trustregistry.v1.TrustRegistry.controller":
		x.Controller = value.Interface().(string)
	case "pratikasr.trustregistry.v1.TrustRegistry.created":
		x.Created = value.Message().Interface().(*timestamppb.Timestamp)
	case "pratikasr.trustregistry.v1.TrustRegistry.modified":
		x.Modified = value.Message().Interface().(*timestamppb.Timestamp)
	case "pratikasr.trustregistry.v1.TrustRegistry.deposit":
		x.Deposit = value.Int()
	case "pratikasr.trustregistry.v1.TrustRegistry.aka":
		x.Aka = value.Interface().(string)
	case "pratikasr.trustregistry.v1.TrustRegistry.active_version":
		x.ActiveVersion = int32(value.Int())
	case "pratikasr.trustregistry.v1.TrustRegistry.language":
		x.Language = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: pratikasr.trustregistry.v1.TrustRegistry"))
		}
		panic(fmt.Errorf("message pratikasr.trustregistry.v1.TrustRegistry does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TrustRegistry) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "pratikasr.trustregistry.v1.TrustRegistry.created":
		if x.Created == nil {
			x.Created = new(timestamppb.Timestamp)
		}
		return protoreflect.ValueOfMessage(x.Created.ProtoReflect())
	case "pratikasr.trustregistry.v1.TrustRegistry.modified":
		if x.Modified == nil {
			x.Modified = new(timestamppb.Timestamp)
		}
		return protoreflect.ValueOfMessage(x.Modified.ProtoReflect())
	case "pratikasr.trustregistry.v1.TrustRegistry.did":
		panic(fmt.Errorf("field did of message pratikasr.trustregistry.v1.TrustRegistry is not mutable"))
	case "pratikasr.trustregistry.v1.TrustRegistry.controller":
		panic(fmt.Errorf("field controller of message pratikasr.trustregistry.v1.TrustRegistry is not mutable"))
	case "pratikasr.trustregistry.v1.TrustRegistry.deposit":
		panic(fmt.Errorf("field deposit of message pratikasr.trustregistry.v1.TrustRegistry is not mutable"))
	case "pratikasr.trustregistry.v1.TrustRegistry.aka":
		panic(fmt.Errorf("field aka of message pratikasr.trustregistry.v1.TrustRegistry is not mutable"))
	case "pratikasr.trustregistry.v1.TrustRegistry.active_version":
		panic(fmt.Errorf("field active_version of message pratikasr.trustregistry.v1.TrustRegistry is not mutable"))
	case "pratikasr.trustregistry.v1.TrustRegistry.language":
		panic(fmt.Errorf("field language of message pratikasr.trustregistry.v1.TrustRegistry is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: pratikasr.trustregistry.v1.TrustRegistry"))
		}
		panic(fmt.Errorf("message pratikasr.trustregistry.v1.TrustRegistry does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_TrustRegistry) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "pratikasr.trustregistry.v1.TrustRegistry.did":
		return protoreflect.ValueOfString("")
	case "pratikasr.trustregistry.v1.TrustRegistry.controller":
		return protoreflect.ValueOfString("")
	case "pratikasr.trustregistry.v1.TrustRegistry.created":
		m := new(timestamppb.Timestamp)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "pratikasr.trustregistry.v1.TrustRegistry.modified":
		m := new(timestamppb.Timestamp)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "pratikasr.trustregistry.v1.TrustRegistry.deposit":
		return protoreflect.ValueOfInt64(int64(0))
	case "pratikasr.trustregistry.v1.TrustRegistry.aka":
		return protoreflect.ValueOfString("")
	case "pratikasr.trustregistry.v1.TrustRegistry.active_version":
		return protoreflect.ValueOfInt32(int32(0))
	case "pratikasr.trustregistry.v1.TrustRegistry.language":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: pratikasr.trustregistry.v1.TrustRegistry"))
		}
		panic(fmt.Errorf("message pratikasr.trustregistry.v1.TrustRegistry does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_TrustRegistry) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in pratikasr.trustregistry.v1.TrustRegistry", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_TrustRegistry) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TrustRegistry) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_TrustRegistry) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_TrustRegistry) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*TrustRegistry)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Did)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Controller)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Created != nil {
			l = options.Size(x.Created)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Modified != nil {
			l = options.Size(x.Modified)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Deposit != 0 {
			n += 1 + runtime.Sov(uint64(x.Deposit))
		}
		l = len(x.Aka)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.ActiveVersion != 0 {
			n += 1 + runtime.Sov(uint64(x.ActiveVersion))
		}
		l = len(x.Language)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*TrustRegistry)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Language) > 0 {
			i -= len(x.Language)
			copy(dAtA[i:], x.Language)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Language)))
			i--
			dAtA[i] = 0x42
		}
		if x.ActiveVersion != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ActiveVersion))
			i--
			dAtA[i] = 0x38
		}
		if len(x.Aka) > 0 {
			i -= len(x.Aka)
			copy(dAtA[i:], x.Aka)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Aka)))
			i--
			dAtA[i] = 0x32
		}
		if x.Deposit != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Deposit))
			i--
			dAtA[i] = 0x28
		}
		if x.Modified != nil {
			encoded, err := options.Marshal(x.Modified)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x22
		}
		if x.Created != nil {
			encoded, err := options.Marshal(x.Created)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Controller) > 0 {
			i -= len(x.Controller)
			copy(dAtA[i:], x.Controller)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Controller)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Did) > 0 {
			i -= len(x.Did)
			copy(dAtA[i:], x.Did)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Did)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*TrustRegistry)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TrustRegistry: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TrustRegistry: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Did", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Did = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Controller", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Controller = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Created", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Created == nil {
					x.Created = &timestamppb.Timestamp{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Created); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Modified", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Modified == nil {
					x.Modified = &timestamppb.Timestamp{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Modified); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Deposit", wireType)
				}
				x.Deposit = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Deposit |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Aka", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Aka = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 7:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ActiveVersion", wireType)
				}
				x.ActiveVersion = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ActiveVersion |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Language", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Language = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GovernanceFrameworkVersion              protoreflect.MessageDescriptor
	fd_GovernanceFrameworkVersion_id           protoreflect.FieldDescriptor
	fd_GovernanceFrameworkVersion_tr_did       protoreflect.FieldDescriptor
	fd_GovernanceFrameworkVersion_created      protoreflect.FieldDescriptor
	fd_GovernanceFrameworkVersion_version      protoreflect.FieldDescriptor
	fd_GovernanceFrameworkVersion_active_since protoreflect.FieldDescriptor
)

func init() {
	file_pratikasr_trustregistry_v1_types_proto_init()
	md_GovernanceFrameworkVersion = File_pratikasr_trustregistry_v1_types_proto.Messages().ByName("GovernanceFrameworkVersion")
	fd_GovernanceFrameworkVersion_id = md_GovernanceFrameworkVersion.Fields().ByName("id")
	fd_GovernanceFrameworkVersion_tr_did = md_GovernanceFrameworkVersion.Fields().ByName("tr_did")
	fd_GovernanceFrameworkVersion_created = md_GovernanceFrameworkVersion.Fields().ByName("created")
	fd_GovernanceFrameworkVersion_version = md_GovernanceFrameworkVersion.Fields().ByName("version")
	fd_GovernanceFrameworkVersion_active_since = md_GovernanceFrameworkVersion.Fields().ByName("active_since")
}

var _ protoreflect.Message = (*fastReflection_GovernanceFrameworkVersion)(nil)

type fastReflection_GovernanceFrameworkVersion GovernanceFrameworkVersion

func (x *GovernanceFrameworkVersion) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GovernanceFrameworkVersion)(x)
}

func (x *GovernanceFrameworkVersion) slowProtoReflect() protoreflect.Message {
	mi := &file_pratikasr_trustregistry_v1_types_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GovernanceFrameworkVersion_messageType fastReflection_GovernanceFrameworkVersion_messageType
var _ protoreflect.MessageType = fastReflection_GovernanceFrameworkVersion_messageType{}

type fastReflection_GovernanceFrameworkVersion_messageType struct{}

func (x fastReflection_GovernanceFrameworkVersion_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GovernanceFrameworkVersion)(nil)
}
func (x fastReflection_GovernanceFrameworkVersion_messageType) New() protoreflect.Message {
	return new(fastReflection_GovernanceFrameworkVersion)
}
func (x fastReflection_GovernanceFrameworkVersion_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GovernanceFrameworkVersion
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GovernanceFrameworkVersion) Descriptor() protoreflect.MessageDescriptor {
	return md_GovernanceFrameworkVersion
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GovernanceFrameworkVersion) Type() protoreflect.MessageType {
	return _fastReflection_GovernanceFrameworkVersion_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GovernanceFrameworkVersion) New() protoreflect.Message {
	return new(fastReflection_GovernanceFrameworkVersion)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GovernanceFrameworkVersion) Interface() protoreflect.ProtoMessage {
	return (*GovernanceFrameworkVersion)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GovernanceFrameworkVersion) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Id != "" {
		value := protoreflect.ValueOfString(x.Id)
		if !f(fd_GovernanceFrameworkVersion_id, value) {
			return
		}
	}
	if x.TrDid != "" {
		value := protoreflect.ValueOfString(x.TrDid)
		if !f(fd_GovernanceFrameworkVersion_tr_did, value) {
			return
		}
	}
	if x.Created != nil {
		value := protoreflect.ValueOfMessage(x.Created.ProtoReflect())
		if !f(fd_GovernanceFrameworkVersion_created, value) {
			return
		}
	}
	if x.Version != int32(0) {
		value := protoreflect.ValueOfInt32(x.Version)
		if !f(fd_GovernanceFrameworkVersion_version, value) {
			return
		}
	}
	if x.ActiveSince != nil {
		value := protoreflect.ValueOfMessage(x.ActiveSince.ProtoReflect())
		if !f(fd_GovernanceFrameworkVersion_active_since, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GovernanceFrameworkVersion) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "pratikasr.trustregistry.v1.GovernanceFrameworkVersion.id":
		return x.Id != ""
	case "pratikasr.trustregistry.v1.GovernanceFrameworkVersion.tr_did":
		return x.TrDid != ""
	case "pratikasr.trustregistry.v1.GovernanceFrameworkVersion.created":
		return x.Created != nil
	case "pratikasr.trustregistry.v1.GovernanceFrameworkVersion.version":
		return x.Version != int32(0)
	case "pratikasr.trustregistry.v1.GovernanceFrameworkVersion.active_since":
		return x.ActiveSince != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: pratikasr.trustregistry.v1.GovernanceFrameworkVersion"))
		}
		panic(fmt.Errorf("message pratikasr.trustregistry.v1.GovernanceFrameworkVersion does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GovernanceFrameworkVersion) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "pratikasr.trustregistry.v1.GovernanceFrameworkVersion.id":
		x.Id = ""
	case "pratikasr.trustregistry.v1.GovernanceFrameworkVersion.tr_did":
		x.TrDid = ""
	case "pratikasr.trustregistry.v1.GovernanceFrameworkVersion.created":
		x.Created = nil
	case "pratikasr.trustregistry.v1.GovernanceFrameworkVersion.version":
		x.Version = int32(0)
	case "pratikasr.trustregistry.v1.GovernanceFrameworkVersion.active_since":
		x.ActiveSince = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: pratikasr.trustregistry.v1.GovernanceFrameworkVersion"))
		}
		panic(fmt.Errorf("message pratikasr.trustregistry.v1.GovernanceFrameworkVersion does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GovernanceFrameworkVersion) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "pratikasr.trustregistry.v1.GovernanceFrameworkVersion.id":
		value := x.Id
		return protoreflect.ValueOfString(value)
	case "pratikasr.trustregistry.v1.GovernanceFrameworkVersion.tr_did":
		value := x.TrDid
		return protoreflect.ValueOfString(value)
	case "pratikasr.trustregistry.v1.GovernanceFrameworkVersion.created":
		value := x.Created
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "pratikasr.trustregistry.v1.GovernanceFrameworkVersion.version":
		value := x.Version
		return protoreflect.ValueOfInt32(value)
	case "pratikasr.trustregistry.v1.GovernanceFrameworkVersion.active_since":
		value := x.ActiveSince
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: pratikasr.trustregistry.v1.GovernanceFrameworkVersion"))
		}
		panic(fmt.Errorf("message pratikasr.trustregistry.v1.GovernanceFrameworkVersion does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GovernanceFrameworkVersion) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "pratikasr.trustregistry.v1.GovernanceFrameworkVersion.id":
		x.Id = value.Interface().(string)
	case "pratikasr.trustregistry.v1.GovernanceFrameworkVersion.tr_did":
		x.TrDid = value.Interface().(string)
	case "pratikasr.trustregistry.v1.GovernanceFrameworkVersion.created":
		x.Created = value.Message().Interface().(*timestamppb.Timestamp)
	case "pratikasr.trustregistry.v1.GovernanceFrameworkVersion.version":
		x.Version = int32(value.Int())
	case "pratikasr.trustregistry.v1.GovernanceFrameworkVersion.active_since":
		x.ActiveSince = value.Message().Interface().(*timestamppb.Timestamp)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: pratikasr.trustregistry.v1.GovernanceFrameworkVersion"))
		}
		panic(fmt.Errorf("message pratikasr.trustregistry.v1.GovernanceFrameworkVersion does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GovernanceFrameworkVersion) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "pratikasr.trustregistry.v1.GovernanceFrameworkVersion.created":
		if x.Created == nil {
			x.Created = new(timestamppb.Timestamp)
		}
		return protoreflect.ValueOfMessage(x.Created.ProtoReflect())
	case "pratikasr.trustregistry.v1.GovernanceFrameworkVersion.active_since":
		if x.ActiveSince == nil {
			x.ActiveSince = new(timestamppb.Timestamp)
		}
		return protoreflect.ValueOfMessage(x.ActiveSince.ProtoReflect())
	case "pratikasr.trustregistry.v1.GovernanceFrameworkVersion.id":
		panic(fmt.Errorf("field id of message pratikasr.trustregistry.v1.GovernanceFrameworkVersion is not mutable"))
	case "pratikasr.trustregistry.v1.GovernanceFrameworkVersion.tr_did":
		panic(fmt.Errorf("field tr_did of message pratikasr.trustregistry.v1.GovernanceFrameworkVersion is not mutable"))
	case "pratikasr.trustregistry.v1.GovernanceFrameworkVersion.version":
		panic(fmt.Errorf("field version of message pratikasr.trustregistry.v1.GovernanceFrameworkVersion is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: pratikasr.trustregistry.v1.GovernanceFrameworkVersion"))
		}
		panic(fmt.Errorf("message pratikasr.trustregistry.v1.GovernanceFrameworkVersion does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GovernanceFrameworkVersion) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "pratikasr.trustregistry.v1.GovernanceFrameworkVersion.id":
		return protoreflect.ValueOfString("")
	case "pratikasr.trustregistry.v1.GovernanceFrameworkVersion.tr_did":
		return protoreflect.ValueOfString("")
	case "pratikasr.trustregistry.v1.GovernanceFrameworkVersion.created":
		m := new(timestamppb.Timestamp)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "pratikasr.trustregistry.v1.GovernanceFrameworkVersion.version":
		return protoreflect.ValueOfInt32(int32(0))
	case "pratikasr.trustregistry.v1.GovernanceFrameworkVersion.active_since":
		m := new(timestamppb.Timestamp)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: pratikasr.trustregistry.v1.GovernanceFrameworkVersion"))
		}
		panic(fmt.Errorf("message pratikasr.trustregistry.v1.GovernanceFrameworkVersion does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GovernanceFrameworkVersion) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in pratikasr.trustregistry.v1.GovernanceFrameworkVersion", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GovernanceFrameworkVersion) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GovernanceFrameworkVersion) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GovernanceFrameworkVersion) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GovernanceFrameworkVersion) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GovernanceFrameworkVersion)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Id)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.TrDid)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Created != nil {
			l = options.Size(x.Created)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Version != 0 {
			n += 1 + runtime.Sov(uint64(x.Version))
		}
		if x.ActiveSince != nil {
			l = options.Size(x.ActiveSince)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GovernanceFrameworkVersion)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.ActiveSince != nil {
			encoded, err := options.Marshal(x.ActiveSince)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x2a
		}
		if x.Version != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Version))
			i--
			dAtA[i] = 0x20
		}
		if x.Created != nil {
			encoded, err := options.Marshal(x.Created)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.TrDid) > 0 {
			i -= len(x.TrDid)
			copy(dAtA[i:], x.TrDid)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TrDid)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Id) > 0 {
			i -= len(x.Id)
			copy(dAtA[i:], x.Id)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Id)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GovernanceFrameworkVersion)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GovernanceFrameworkVersion: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GovernanceFrameworkVersion: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Id = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TrDid", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TrDid = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Created", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Created == nil {
					x.Created = &timestamppb.Timestamp{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Created); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Version", wireType)
				}
				x.Version = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Version |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ActiveSince", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.ActiveSince == nil {
					x.ActiveSince = &timestamppb.Timestamp{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ActiveSince); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GovernanceFrameworkDocument          protoreflect.MessageDescriptor
	fd_GovernanceFrameworkDocument_id       protoreflect.FieldDescriptor
	fd_GovernanceFrameworkDocument_gfv_id   protoreflect.FieldDescriptor
	fd_GovernanceFrameworkDocument_created  protoreflect.FieldDescriptor
	fd_GovernanceFrameworkDocument_language protoreflect.FieldDescriptor
	fd_GovernanceFrameworkDocument_url      protoreflect.FieldDescriptor
	fd_GovernanceFrameworkDocument_hash     protoreflect.FieldDescriptor
)

func init() {
	file_pratikasr_trustregistry_v1_types_proto_init()
	md_GovernanceFrameworkDocument = File_pratikasr_trustregistry_v1_types_proto.Messages().ByName("GovernanceFrameworkDocument")
	fd_GovernanceFrameworkDocument_id = md_GovernanceFrameworkDocument.Fields().ByName("id")
	fd_GovernanceFrameworkDocument_gfv_id = md_GovernanceFrameworkDocument.Fields().ByName("gfv_id")
	fd_GovernanceFrameworkDocument_created = md_GovernanceFrameworkDocument.Fields().ByName("created")
	fd_GovernanceFrameworkDocument_language = md_GovernanceFrameworkDocument.Fields().ByName("language")
	fd_GovernanceFrameworkDocument_url = md_GovernanceFrameworkDocument.Fields().ByName("url")
	fd_GovernanceFrameworkDocument_hash = md_GovernanceFrameworkDocument.Fields().ByName("hash")
}

var _ protoreflect.Message = (*fastReflection_GovernanceFrameworkDocument)(nil)

type fastReflection_GovernanceFrameworkDocument GovernanceFrameworkDocument

func (x *GovernanceFrameworkDocument) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GovernanceFrameworkDocument)(x)
}

func (x *GovernanceFrameworkDocument) slowProtoReflect() protoreflect.Message {
	mi := &file_pratikasr_trustregistry_v1_types_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GovernanceFrameworkDocument_messageType fastReflection_GovernanceFrameworkDocument_messageType
var _ protoreflect.MessageType = fastReflection_GovernanceFrameworkDocument_messageType{}

type fastReflection_GovernanceFrameworkDocument_messageType struct{}

func (x fastReflection_GovernanceFrameworkDocument_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GovernanceFrameworkDocument)(nil)
}
func (x fastReflection_GovernanceFrameworkDocument_messageType) New() protoreflect.Message {
	return new(fastReflection_GovernanceFrameworkDocument)
}
func (x fastReflection_GovernanceFrameworkDocument_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GovernanceFrameworkDocument
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GovernanceFrameworkDocument) Descriptor() protoreflect.MessageDescriptor {
	return md_GovernanceFrameworkDocument
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GovernanceFrameworkDocument) Type() protoreflect.MessageType {
	return _fastReflection_GovernanceFrameworkDocument_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GovernanceFrameworkDocument) New() protoreflect.Message {
	return new(fastReflection_GovernanceFrameworkDocument)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GovernanceFrameworkDocument) Interface() protoreflect.ProtoMessage {
	return (*GovernanceFrameworkDocument)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GovernanceFrameworkDocument) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Id != "" {
		value := protoreflect.ValueOfString(x.Id)
		if !f(fd_GovernanceFrameworkDocument_id, value) {
			return
		}
	}
	if x.GfvId != "" {
		value := protoreflect.ValueOfString(x.GfvId)
		if !f(fd_GovernanceFrameworkDocument_gfv_id, value) {
			return
		}
	}
	if x.Created != nil {
		value := protoreflect.ValueOfMessage(x.Created.ProtoReflect())
		if !f(fd_GovernanceFrameworkDocument_created, value) {
			return
		}
	}
	if x.Language != "" {
		value := protoreflect.ValueOfString(x.Language)
		if !f(fd_GovernanceFrameworkDocument_language, value) {
			return
		}
	}
	if x.Url != "" {
		value := protoreflect.ValueOfString(x.Url)
		if !f(fd_GovernanceFrameworkDocument_url, value) {
			return
		}
	}
	if x.Hash != "" {
		value := protoreflect.ValueOfString(x.Hash)
		if !f(fd_GovernanceFrameworkDocument_hash, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GovernanceFrameworkDocument) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "pratikasr.trustregistry.v1.GovernanceFrameworkDocument.id":
		return x.Id != ""
	case "pratikasr.trustregistry.v1.GovernanceFrameworkDocument.gfv_id":
		return x.GfvId != ""
	case "pratikasr.trustregistry.v1.GovernanceFrameworkDocument.created":
		return x.Created != nil
	case "pratikasr.trustregistry.v1.GovernanceFrameworkDocument.language":
		return x.Language != ""
	case "pratikasr.trustregistry.v1.GovernanceFrameworkDocument.url":
		return x.Url != ""
	case "pratikasr.trustregistry.v1.GovernanceFrameworkDocument.hash":
		return x.Hash != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: pratikasr.trustregistry.v1.GovernanceFrameworkDocument"))
		}
		panic(fmt.Errorf("message pratikasr.trustregistry.v1.GovernanceFrameworkDocument does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GovernanceFrameworkDocument) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "pratikasr.trustregistry.v1.GovernanceFrameworkDocument.id":
		x.Id = ""
	case "pratikasr.trustregistry.v1.GovernanceFrameworkDocument.gfv_id":
		x.GfvId = ""
	case "pratikasr.trustregistry.v1.GovernanceFrameworkDocument.created":
		x.Created = nil
	case "pratikasr.trustregistry.v1.GovernanceFrameworkDocument.language":
		x.Language = ""
	case "pratikasr.trustregistry.v1.GovernanceFrameworkDocument.url":
		x.Url = ""
	case "pratikasr.trustregistry.v1.GovernanceFrameworkDocument.hash":
		x.Hash = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: pratikasr.trustregistry.v1.GovernanceFrameworkDocument"))
		}
		panic(fmt.Errorf("message pratikasr.trustregistry.v1.GovernanceFrameworkDocument does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GovernanceFrameworkDocument) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "pratikasr.trustregistry.v1.GovernanceFrameworkDocument.id":
		value := x.Id
		return protoreflect.ValueOfString(value)
	case "pratikasr.trustregistry.v1.GovernanceFrameworkDocument.gfv_id":
		value := x.GfvId
		return protoreflect.ValueOfString(value)
	case "pratikasr.trustregistry.v1.GovernanceFrameworkDocument.created":
		value := x.Created
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "pratikasr.trustregistry.v1.GovernanceFrameworkDocument.language":
		value := x.Language
		return protoreflect.ValueOfString(value)
	case "pratikasr.trustregistry.v1.GovernanceFrameworkDocument.url":
		value := x.Url
		return protoreflect.ValueOfString(value)
	case "pratikasr.trustregistry.v1.GovernanceFrameworkDocument.hash":
		value := x.Hash
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: pratikasr.trustregistry.v1.GovernanceFrameworkDocument"))
		}
		panic(fmt.Errorf("message pratikasr.trustregistry.v1.GovernanceFrameworkDocument does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GovernanceFrameworkDocument) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "pratikasr.trustregistry.v1.GovernanceFrameworkDocument.id":
		x.Id = value.Interface().(string)
	case "pratikasr.trustregistry.v1.GovernanceFrameworkDocument.gfv_id":
		x.GfvId = value.Interface().(string)
	case "pratikasr.trustregistry.v1.GovernanceFrameworkDocument.created":
		x.Created = value.Message().Interface().(*timestamppb.Timestamp)
	case "pratikasr.trustregistry.v1.GovernanceFrameworkDocument.language":
		x.Language = value.Interface().(string)
	case "pratikasr.trustregistry.v1.GovernanceFrameworkDocument.url":
		x.Url = value.Interface().(string)
	case "pratikasr.trustregistry.v1.GovernanceFrameworkDocument.hash":
		x.Hash = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: pratikasr.trustregistry.v1.GovernanceFrameworkDocument"))
		}
		panic(fmt.Errorf("message pratikasr.trustregistry.v1.GovernanceFrameworkDocument does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GovernanceFrameworkDocument) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "pratikasr.trustregistry.v1.GovernanceFrameworkDocument.created":
		if x.Created == nil {
			x.Created = new(timestamppb.Timestamp)
		}
		return protoreflect.ValueOfMessage(x.Created.ProtoReflect())
	case "pratikasr.trustregistry.v1.GovernanceFrameworkDocument.id":
		panic(fmt.Errorf("field id of message pratikasr.trustregistry.v1.GovernanceFrameworkDocument is not mutable"))
	case "pratikasr.trustregistry.v1.GovernanceFrameworkDocument.gfv_id":
		panic(fmt.Errorf("field gfv_id of message pratikasr.trustregistry.v1.GovernanceFrameworkDocument is not mutable"))
	case "pratikasr.trustregistry.v1.GovernanceFrameworkDocument.language":
		panic(fmt.Errorf("field language of message pratikasr.trustregistry.v1.GovernanceFrameworkDocument is not mutable"))
	case "pratikasr.trustregistry.v1.GovernanceFrameworkDocument.url":
		panic(fmt.Errorf("field url of message pratikasr.trustregistry.v1.GovernanceFrameworkDocument is not mutable"))
	case "pratikasr.trustregistry.v1.GovernanceFrameworkDocument.hash":
		panic(fmt.Errorf("field hash of message pratikasr.trustregistry.v1.GovernanceFrameworkDocument is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: pratikasr.trustregistry.v1.GovernanceFrameworkDocument"))
		}
		panic(fmt.Errorf("message pratikasr.trustregistry.v1.GovernanceFrameworkDocument does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GovernanceFrameworkDocument) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "pratikasr.trustregistry.v1.GovernanceFrameworkDocument.id":
		return protoreflect.ValueOfString("")
	case "pratikasr.trustregistry.v1.GovernanceFrameworkDocument.gfv_id":
		return protoreflect.ValueOfString("")
	case "pratikasr.trustregistry.v1.GovernanceFrameworkDocument.created":
		m := new(timestamppb.Timestamp)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "pratikasr.trustregistry.v1.GovernanceFrameworkDocument.language":
		return protoreflect.ValueOfString("")
	case "pratikasr.trustregistry.v1.GovernanceFrameworkDocument.url":
		return protoreflect.ValueOfString("")
	case "pratikasr.trustregistry.v1.GovernanceFrameworkDocument.hash":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: pratikasr.trustregistry.v1.GovernanceFrameworkDocument"))
		}
		panic(fmt.Errorf("message pratikasr.trustregistry.v1.GovernanceFrameworkDocument does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GovernanceFrameworkDocument) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in pratikasr.trustregistry.v1.GovernanceFrameworkDocument", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GovernanceFrameworkDocument) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GovernanceFrameworkDocument) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GovernanceFrameworkDocument) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GovernanceFrameworkDocument) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GovernanceFrameworkDocument)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Id)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.GfvId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Created != nil {
			l = options.Size(x.Created)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Language)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Url)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Hash)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GovernanceFrameworkDocument)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Hash) > 0 {
			i -= len(x.Hash)
			copy(dAtA[i:], x.Hash)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Hash)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.Url) > 0 {
			i -= len(x.Url)
			copy(dAtA[i:], x.Url)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Url)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.Language) > 0 {
			i -= len(x.Language)
			copy(dAtA[i:], x.Language)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Language)))
			i--
			dAtA[i] = 0x22
		}
		if x.Created != nil {
			encoded, err := options.Marshal(x.Created)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.GfvId) > 0 {
			i -= len(x.GfvId)
			copy(dAtA[i:], x.GfvId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.GfvId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Id) > 0 {
			i -= len(x.Id)
			copy(dAtA[i:], x.Id)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Id)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GovernanceFrameworkDocument)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GovernanceFrameworkDocument: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GovernanceFrameworkDocument: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Id = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field GfvId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.GfvId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Created", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Created == nil {
					x.Created = &timestamppb.Timestamp{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Created); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Language", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Language = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Url = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Hash = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_Params                     protoreflect.MessageDescriptor
	fd_Params_max_did_length      protoreflect.FieldDescriptor
	fd_Params_max_language_length protoreflect.FieldDescriptor
	fd_Params_max_url_length      protoreflect.FieldDescriptor
	fd_Params_max_hash_length     protoreflect.FieldDescriptor
)

func init() {
	file_pratikasr_trustregistry_v1_types_proto_init()
	md_Params = File_pratikasr_trustregistry_v1_types_proto.Messages().ByName("Params")
	fd_Params_max_did_length = md_Params.Fields().ByName("max_did_length")
	fd_Params_max_language_length = md_Params.Fields().ByName("max_language_length")
	fd_Params_max_url_length = md_Params.Fields().ByName("max_url_length")
	fd_Params_max_hash_length = md_Params.Fields().ByName("max_hash_length")
}

var _ protoreflect.Message = (*fastReflection_Params)(nil)

type fastReflection_Params Params

func (x *Params) ProtoReflect() protoreflect.Message {
	return (*fastReflection_Params)(x)
}

func (x *Params) slowProtoReflect() protoreflect.Message {
	mi := &file_pratikasr_trustregistry_v1_types_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_Params_messageType fastReflection_Params_messageType
var _ protoreflect.MessageType = fastReflection_Params_messageType{}

type fastReflection_Params_messageType struct{}

func (x fastReflection_Params_messageType) Zero() protoreflect.Message {
	return (*fastReflection_Params)(nil)
}
func (x fastReflection_Params_messageType) New() protoreflect.Message {
	return new(fastReflection_Params)
}
func (x fastReflection_Params_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_Params
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_Params) Descriptor() protoreflect.MessageDescriptor {
	return md_Params
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_Params) Type() protoreflect.MessageType {
	return _fastReflection_Params_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_Params) New() protoreflect.Message {
	return new(fastReflection_Params)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_Params) Interface() protoreflect.ProtoMessage {
	return (*Params)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_Params) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.MaxDidLength != uint64(0) {
		value := protoreflect.ValueOfUint64(x.MaxDidLength)
		if !f(fd_Params_max_did_length, value) {
			return
		}
	}
	if x.MaxLanguageLength != uint64(0) {
		value := protoreflect.ValueOfUint64(x.MaxLanguageLength)
		if !f(fd_Params_max_language_length, value) {
			return
		}
	}
	if x.MaxUrlLength != uint64(0) {
		value := protoreflect.ValueOfUint64(x.MaxUrlLength)
		if !f(fd_Params_max_url_length, value) {
			return
		}
	}
	if x.MaxHashLength != uint64(0) {
		value := protoreflect.ValueOfUint64(x.MaxHashLength)
		if !f(fd_Params_max_hash_length, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_Params) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "pratikasr.trustregistry.v1.Params.max_did_length":
		return x.MaxDidLength != uint64(0)
	case "pratikasr.trustregistry.v1.Params.max_language_length":
		return x.MaxLanguageLength != uint64(0)
	case "pratikasr.trustregistry.v1.Params.max_url_length":
		return x.MaxUrlLength != uint64(0)
	case "pratikasr.trustregistry.v1.Params.max_hash_length":
		return x.MaxHashLength != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: pratikasr.trustregistry.v1.Params"))
		}
		panic(fmt.Errorf("message pratikasr.trustregistry.v1.Params does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Params) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "pratikasr.trustregistry.v1.Params.max_did_length":
		x.MaxDidLength = uint64(0)
	case "pratikasr.trustregistry.v1.Params.max_language_length":
		x.MaxLanguageLength = uint64(0)
	case "pratikasr.trustregistry.v1.Params.max_url_length":
		x.MaxUrlLength = uint64(0)
	case "pratikasr.trustregistry.v1.Params.max_hash_length":
		x.MaxHashLength = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: pratikasr.trustregistry.v1.Params"))
		}
		panic(fmt.Errorf("message pratikasr.trustregistry.v1.Params does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_Params) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "pratikasr.trustregistry.v1.Params.max_did_length":
		value := x.MaxDidLength
		return protoreflect.ValueOfUint64(value)
	case "pratikasr.trustregistry.v1.Params.max_language_length":
		value := x.MaxLanguageLength
		return protoreflect.ValueOfUint64(value)
	case "pratikasr.trustregistry.v1.Params.max_url_length":
		value := x.MaxUrlLength
		return protoreflect.ValueOfUint64(value)
	case "pratikasr.trustregistry.v1.Params.max_hash_length":
		value := x.MaxHashLength
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: pratikasr.trustregistry.v1.Params"))
		}
		panic(fmt.Errorf("message pratikasr.trustregistry.v1.Params does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Params) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "pratikasr.trustregistry.v1.Params.max_did_length":
		x.MaxDidLength = value.Uint()
	case "pratikasr.trustregistry.v1.Params.max_language_length":
		x.MaxLanguageLength = value.Uint()
	case "pratikasr.trustregistry.v1.Params.max_url_length":
		x.MaxUrlLength = value.Uint()
	case "pratikasr.trustregistry.v1.Params.max_hash_length":
		x.MaxHashLength = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: pratikasr.trustregistry.v1.Params"))
		}
		panic(fmt.Errorf("message pratikasr.trustregistry.v1.Params does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Params) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "pratikasr.trustregistry.v1.Params.max_did_length":
		panic(fmt.Errorf("field max_did_length of message pratikasr.trustregistry.v1.Params is not mutable"))
	case "pratikasr.trustregistry.v1.Params.max_language_length":
		panic(fmt.Errorf("field max_language_length of message pratikasr.trustregistry.v1.Params is not mutable"))
	case "pratikasr.trustregistry.v1.Params.max_url_length":
		panic(fmt.Errorf("field max_url_length of message pratikasr.trustregistry.v1.Params is not mutable"))
	case "pratikasr.trustregistry.v1.Params.max_hash_length":
		panic(fmt.Errorf("field max_hash_length of message pratikasr.trustregistry.v1.Params is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: pratikasr.trustregistry.v1.Params"))
		}
		panic(fmt.Errorf("message pratikasr.trustregistry.v1.Params does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_Params) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "pratikasr.trustregistry.v1.Params.max_did_length":
		return protoreflect.ValueOfUint64(uint64(0))
	case "pratikasr.trustregistry.v1.Params.max_language_length":
		return protoreflect.ValueOfUint64(uint64(0))
	case "pratikasr.trustregistry.v1.Params.max_url_length":
		return protoreflect.ValueOfUint64(uint64(0))
	case "pratikasr.trustregistry.v1.Params.max_hash_length":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: pratikasr.trustregistry.v1.Params"))
		}
		panic(fmt.Errorf("message pratikasr.trustregistry.v1.Params does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_Params) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in pratikasr.trustregistry.v1.Params", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_Params) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Params) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_Params) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_Params) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*Params)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.MaxDidLength != 0 {
			n += 1 + runtime.Sov(uint64(x.MaxDidLength))
		}
		if x.MaxLanguageLength != 0 {
			n += 1 + runtime.Sov(uint64(x.MaxLanguageLength))
		}
		if x.MaxUrlLength != 0 {
			n += 1 + runtime.Sov(uint64(x.MaxUrlLength))
		}
		if x.MaxHashLength != 0 {
			n += 1 + runtime.Sov(uint64(x.MaxHashLength))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*Params)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.MaxHashLength != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.MaxHashLength))
			i--
			dAtA[i] = 0x20
		}
		if x.MaxUrlLength != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.MaxUrlLength))
			i--
			dAtA[i] = 0x18
		}
		if x.MaxLanguageLength != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.MaxLanguageLength))
			i--
			dAtA[i] = 0x10
		}
		if x.MaxDidLength != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.MaxDidLength))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*Params)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Params: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Params: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MaxDidLength", wireType)
				}
				x.MaxDidLength = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.MaxDidLength |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MaxLanguageLength", wireType)
				}
				x.MaxLanguageLength = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.MaxLanguageLength |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MaxUrlLength", wireType)
				}
				x.MaxUrlLength = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.MaxUrlLength |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MaxHashLength", wireType)
				}
				x.MaxHashLength = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.MaxHashLength |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_GenesisState_2_list)(nil)

type _GenesisState_2_list struct {
	list *[]*TrustRegistry
}

func (x *_GenesisState_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TrustRegistry)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TrustRegistry)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_2_list) AppendMutable() protoreflect.Value {
	v := new(TrustRegistry)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_2_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_2_list) NewElement() protoreflect.Value {
	v := new(TrustRegistry)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_2_list) IsValid() bool {
	return x.list != nil
}

var (
	md_GenesisState                  protoreflect.MessageDescriptor
	fd_GenesisState_params           protoreflect.FieldDescriptor
	fd_GenesisState_trust_registries protoreflect.FieldDescriptor
)

func init() {
	file_pratikasr_trustregistry_v1_types_proto_init()
	md_GenesisState = File_pratikasr_trustregistry_v1_types_proto.Messages().ByName("GenesisState")
	fd_GenesisState_params = md_GenesisState.Fields().ByName("params")
	fd_GenesisState_trust_registries = md_GenesisState.Fields().ByName("trust_registries")
}

var _ protoreflect.Message = (*fastReflection_GenesisState)(nil)

type fastReflection_GenesisState GenesisState

func (x *GenesisState) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GenesisState)(x)
}

func (x *GenesisState) slowProtoReflect() protoreflect.Message {
	mi := &file_pratikasr_trustregistry_v1_types_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GenesisState_messageType fastReflection_GenesisState_messageType
var _ protoreflect.MessageType = fastReflection_GenesisState_messageType{}

type fastReflection_GenesisState_messageType struct{}

func (x fastReflection_GenesisState_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GenesisState)(nil)
}
func (x fastReflection_GenesisState_messageType) New() protoreflect.Message {
	return new(fastReflection_GenesisState)
}
func (x fastReflection_GenesisState_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GenesisState
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GenesisState) Descriptor() protoreflect.MessageDescriptor {
	return md_GenesisState
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GenesisState) Type() protoreflect.MessageType {
	return _fastReflection_GenesisState_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GenesisState) New() protoreflect.Message {
	return new(fastReflection_GenesisState)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GenesisState) Interface() protoreflect.ProtoMessage {
	return (*GenesisState)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GenesisState) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Params != nil {
		value := protoreflect.ValueOfMessage(x.Params.ProtoReflect())
		if !f(fd_GenesisState_params, value) {
			return
		}
	}
	if len(x.TrustRegistries) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_2_list{list: &x.TrustRegistries})
		if !f(fd_GenesisState_trust_registries, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GenesisState) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "pratikasr.trustregistry.v1.GenesisState.params":
		return x.Params != nil
	case "pratikasr.trustregistry.v1.GenesisState.trust_registries":
		return len(x.TrustRegistries) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: pratikasr.trustregistry.v1.GenesisState"))
		}
		panic(fmt.Errorf("message pratikasr.trustregistry.v1.GenesisState does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GenesisState) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "pratikasr.trustregistry.v1.GenesisState.params":
		x.Params = nil
	case "pratikasr.trustregistry.v1.GenesisState.trust_registries":
		x.TrustRegistries = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: pratikasr.trustregistry.v1.GenesisState"))
		}
		panic(fmt.Errorf("message pratikasr.trustregistry.v1.GenesisState does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GenesisState) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "pratikasr.trustregistry.v1.GenesisState.params":
		value := x.Params
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "pratikasr.trustregistry.v1.GenesisState.trust_registries":
		if len(x.TrustRegistries) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_2_list{})
		}
		listValue := &_GenesisState_2_list{list: &x.TrustRegistries}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: pratikasr.trustregistry.v1.GenesisState"))
		}
		panic(fmt.Errorf("message pratikasr.trustregistry.v1.GenesisState does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GenesisState) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "pratikasr.trustregistry.v1.GenesisState.params":
		x.Params = value.Message().Interface().(*Params)
	case "pratikasr.trustregistry.v1.GenesisState.trust_registries":
		lv := value.List()
		clv := lv.(*_GenesisState_2_list)
		x.TrustRegistries = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: pratikasr.trustregistry.v1.GenesisState"))
		}
		panic(fmt.Errorf("message pratikasr.trustregistry.v1.GenesisState does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GenesisState) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "pratikasr.trustregistry.v1.GenesisState.params":
		if x.Params == nil {
			x.Params = new(Params)
		}
		return protoreflect.ValueOfMessage(x.Params.ProtoReflect())
	case "pratikasr.trustregistry.v1.GenesisState.trust_registries":
		if x.TrustRegistries == nil {
			x.TrustRegistries = []*TrustRegistry{}
		}
		value := &_GenesisState_2_list{list: &x.TrustRegistries}
		return protoreflect.ValueOfList(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: pratikasr.trustregistry.v1.GenesisState"))
		}
		panic(fmt.Errorf("message pratikasr.trustregistry.v1.GenesisState does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GenesisState) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "pratikasr.trustregistry.v1.GenesisState.params":
		m := new(Params)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "pratikasr.trustregistry.v1.GenesisState.trust_registries":
		list := []*TrustRegistry{}
		return protoreflect.ValueOfList(&_GenesisState_2_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: pratikasr.trustregistry.v1.GenesisState"))
		}
		panic(fmt.Errorf("message pratikasr.trustregistry.v1.GenesisState does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GenesisState) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in pratikasr.trustregistry.v1.GenesisState", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GenesisState) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GenesisState) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GenesisState) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GenesisState) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GenesisState)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Params != nil {
			l = options.Size(x.Params)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.TrustRegistries) > 0 {
			for _, e := range x.TrustRegistries {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GenesisState)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.TrustRegistries) > 0 {
			for iNdEx := len(x.TrustRegistries) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.TrustRegistries[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x12
			}
		}
		if x.Params != nil {
			encoded, err := options.Marshal(x.Params)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GenesisState)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GenesisState: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GenesisState: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Params == nil {
					x.Params = &Params{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Params); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TrustRegistries", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TrustRegistries = append(x.TrustRegistries, &TrustRegistry{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TrustRegistries[len(x.TrustRegistries)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: pratikasr/trustregistry/v1/types.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TrustRegistry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Did           string                 `protobuf:"bytes,1,opt,name=did,proto3" json:"did,omitempty"`
	Controller    string                 `protobuf:"bytes,2,opt,name=controller,proto3" json:"controller,omitempty"`
	Created       *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created,proto3" json:"created,omitempty"`
	Modified      *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=modified,proto3" json:"modified,omitempty"`
	Deposit       int64                  `protobuf:"varint,5,opt,name=deposit,proto3" json:"deposit,omitempty"`
	Aka           string                 `protobuf:"bytes,6,opt,name=aka,proto3" json:"aka,omitempty"`
	ActiveVersion int32                  `protobuf:"varint,7,opt,name=active_version,json=activeVersion,proto3" json:"active_version,omitempty"`
	Language      string                 `protobuf:"bytes,8,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *TrustRegistry) Reset() {
	*x = TrustRegistry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pratikasr_trustregistry_v1_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrustRegistry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrustRegistry) ProtoMessage() {}

// Deprecated: Use TrustRegistry.ProtoReflect.Descriptor instead.
func (*TrustRegistry) Descriptor() ([]byte, []int) {
	return file_pratikasr_trustregistry_v1_types_proto_rawDescGZIP(), []int{0}
}

func (x *TrustRegistry) GetDid() string {
	if x != nil {
		return x.Did
	}
	return ""
}

func (x *TrustRegistry) GetController() string {
	if x != nil {
		return x.Controller
	}
	return ""
}

func (x *TrustRegistry) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *TrustRegistry) GetModified() *timestamppb.Timestamp {
	if x != nil {
		return x.Modified
	}
	return nil
}

func (x *TrustRegistry) GetDeposit() int64 {
	if x != nil {
		return x.Deposit
	}
	return 0
}

func (x *TrustRegistry) GetAka() string {
	if x != nil {
		return x.Aka
	}
	return ""
}

func (x *TrustRegistry) GetActiveVersion() int32 {
	if x != nil {
		return x.ActiveVersion
	}
	return 0
}

func (x *TrustRegistry) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type GovernanceFrameworkVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TrDid       string                 `protobuf:"bytes,2,opt,name=tr_did,json=trDid,proto3" json:"tr_did,omitempty"`
	Created     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created,proto3" json:"created,omitempty"`
	Version     int32                  `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
	ActiveSince *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=active_since,json=activeSince,proto3" json:"active_since,omitempty"`
}

func (x *GovernanceFrameworkVersion) Reset() {
	*x = GovernanceFrameworkVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pratikasr_trustregistry_v1_types_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GovernanceFrameworkVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GovernanceFrameworkVersion) ProtoMessage() {}

// Deprecated: Use GovernanceFrameworkVersion.ProtoReflect.Descriptor instead.
func (*GovernanceFrameworkVersion) Descriptor() ([]byte, []int) {
	return file_pratikasr_trustregistry_v1_types_proto_rawDescGZIP(), []int{1}
}

func (x *GovernanceFrameworkVersion) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GovernanceFrameworkVersion) GetTrDid() string {
	if x != nil {
		return x.TrDid
	}
	return ""
}

func (x *GovernanceFrameworkVersion) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *GovernanceFrameworkVersion) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *GovernanceFrameworkVersion) GetActiveSince() *timestamppb.Timestamp {
	if x != nil {
		return x.ActiveSince
	}
	return nil
}

type GovernanceFrameworkDocument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	GfvId    string                 `protobuf:"bytes,2,opt,name=gfv_id,json=gfvId,proto3" json:"gfv_id,omitempty"`
	Created  *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created,proto3" json:"created,omitempty"`
	Language string                 `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	Url      string                 `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	Hash     string                 `protobuf:"bytes,6,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *GovernanceFrameworkDocument) Reset() {
	*x = GovernanceFrameworkDocument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pratikasr_trustregistry_v1_types_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GovernanceFrameworkDocument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GovernanceFrameworkDocument) ProtoMessage() {}

// Deprecated: Use GovernanceFrameworkDocument.ProtoReflect.Descriptor instead.
func (*GovernanceFrameworkDocument) Descriptor() ([]byte, []int) {
	return file_pratikasr_trustregistry_v1_types_proto_rawDescGZIP(), []int{2}
}

func (x *GovernanceFrameworkDocument) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GovernanceFrameworkDocument) GetGfvId() string {
	if x != nil {
		return x.GfvId
	}
	return ""
}

func (x *GovernanceFrameworkDocument) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *GovernanceFrameworkDocument) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *GovernanceFrameworkDocument) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *GovernanceFrameworkDocument) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

// Params defines the parameters of the module.
type Params struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxDidLength      uint64 `protobuf:"varint,1,opt,name=max_did_length,json=maxDidLength,proto3" json:"max_did_length,omitempty"`
	MaxLanguageLength uint64 `protobuf:"varint,2,opt,name=max_language_length,json=maxLanguageLength,proto3" json:"max_language_length,omitempty"`
	MaxUrlLength      uint64 `protobuf:"varint,3,opt,name=max_url_length,json=maxUrlLength,proto3" json:"max_url_length,omitempty"`
	MaxHashLength     uint64 `protobuf:"varint,4,opt,name=max_hash_length,json=maxHashLength,proto3" json:"max_hash_length,omitempty"`
}

func (x *Params) Reset() {
	*x = Params{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pratikasr_trustregistry_v1_types_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Params) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Params) ProtoMessage() {}

// Deprecated: Use Params.ProtoReflect.Descriptor instead.
func (*Params) Descriptor() ([]byte, []int) {
	return file_pratikasr_trustregistry_v1_types_proto_rawDescGZIP(), []int{3}
}

func (x *Params) GetMaxDidLength() uint64 {
	if x != nil {
		return x.MaxDidLength
	}
	return 0
}

func (x *Params) GetMaxLanguageLength() uint64 {
	if x != nil {
		return x.MaxLanguageLength
	}
	return 0
}

func (x *Params) GetMaxUrlLength() uint64 {
	if x != nil {
		return x.MaxUrlLength
	}
	return 0
}

func (x *Params) GetMaxHashLength() uint64 {
	if x != nil {
		return x.MaxHashLength
	}
	return 0
}

// GenesisState is the state that must be provided at genesis.
type GenesisState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Params          *Params          `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
	TrustRegistries []*TrustRegistry `protobuf:"bytes,2,rep,name=trust_registries,json=trustRegistries,proto3" json:"trust_registries,omitempty"`
}

func (x *GenesisState) Reset() {
	*x = GenesisState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pratikasr_trustregistry_v1_types_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenesisState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenesisState) ProtoMessage() {}

// Deprecated: Use GenesisState.ProtoReflect.Descriptor instead.
func (*GenesisState) Descriptor() ([]byte, []int) {
	return file_pratikasr_trustregistry_v1_types_proto_rawDescGZIP(), []int{4}
}

func (x *GenesisState) GetParams() *Params {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *GenesisState) GetTrustRegistries() []*TrustRegistry {
	if x != nil {
		return x.TrustRegistries
	}
	return nil
}

var File_pratikasr_trustregistry_v1_types_proto protoreflect.FileDescriptor

var file_pratikasr_trustregistry_v1_types_proto_rawDesc = []byte{
	0x0a, 0x26, 0x70, 0x72, 0x61, 0x74, 0x69, 0x6b, 0x61, 0x73, 0x72, 0x2f, 0x74, 0x72, 0x75, 0x73,
	0x74, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x70, 0x72, 0x61, 0x74, 0x69, 0x6b,
	0x61, 0x73, 0x72, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x79, 0x2e, 0x76, 0x31, 0x1a, 0x19, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcc, 0x02, 0x0a, 0x0d, 0x54, 0x72, 0x75, 0x73, 0x74,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x0a, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18,
	0xd2, 0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x42, 0x08, 0xc8, 0xde, 0x1f, 0x00, 0x90, 0xdf, 0x1f, 0x01, 0x52, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x40, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x42, 0x08, 0xc8, 0xde, 0x1f, 0x00, 0x90, 0xdf, 0x1f, 0x01, 0x52, 0x08, 0x6d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x61, 0x6b, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61,
	0x6b, 0x61, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0xe6, 0x01, 0x0a, 0x1a, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x72, 0x5f, 0x64, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x72, 0x44, 0x69, 0x64, 0x12, 0x3e, 0x0a, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0xc8, 0xde, 0x1f, 0x00, 0x90, 0xdf,
	0x1f, 0x01, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x47, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f,
	0x73, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0xc8, 0xde, 0x1f, 0x00, 0x90, 0xdf, 0x1f,
	0x01, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x22, 0xc6,
	0x01, 0x0a, 0x1b, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15,
	0x0a, 0x06, 0x67, 0x66, 0x76, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x67, 0x66, 0x76, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x42, 0x08, 0xc8, 0xde, 0x1f, 0x00, 0x90, 0xdf, 0x1f, 0x01, 0x52, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0xac, 0x01, 0x0a, 0x06, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x61, 0x78, 0x5f, 0x64, 0x69, 0x64, 0x5f, 0x6c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x6d, 0x61, 0x78, 0x44,
	0x69, 0x64, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x2e, 0x0a, 0x13, 0x6d, 0x61, 0x78, 0x5f,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x6d, 0x61, 0x78, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x61, 0x78, 0x5f,
	0x75, 0x72, 0x6c, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0c, 0x6d, 0x61, 0x78, 0x55, 0x72, 0x6c, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x26,
	0x0a, 0x0f, 0x6d, 0x61, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x6d, 0x61, 0x78, 0x48, 0x61, 0x73, 0x68,
	0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0xac, 0x01, 0x0a, 0x0c, 0x47, 0x65, 0x6e, 0x65, 0x73,
	0x69, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x40, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x61, 0x74, 0x69, 0x6b,
	0x61, 0x73, 0x72, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x42, 0x04, 0xc8, 0xde, 0x1f,
	0x00, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x5a, 0x0a, 0x10, 0x74, 0x72, 0x75,
	0x73, 0x74, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x61, 0x74, 0x69, 0x6b, 0x61, 0x73, 0x72, 0x2e,
	0x74, 0x72, 0x75, 0x73, 0x74, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x72, 0x75, 0x73, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x42, 0x04,
	0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x42, 0x89, 0x02, 0x0a, 0x1e, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x72,
	0x61, 0x74, 0x69, 0x6b, 0x61, 0x73, 0x72, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x42, 0x0a, 0x54, 0x79, 0x70, 0x65, 0x73, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x51, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x70, 0x72, 0x61, 0x74, 0x69, 0x6b, 0x61, 0x73, 0x72, 0x2f, 0x74, 0x72, 0x75,
	0x73, 0x74, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70,
	0x72, 0x61, 0x74, 0x69, 0x6b, 0x61, 0x73, 0x72, 0x2f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x3b, 0x74, 0x72, 0x75, 0x73, 0x74, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x50, 0x54, 0x58, 0xaa,
	0x02, 0x1a, 0x50, 0x72, 0x61, 0x74, 0x69, 0x6b, 0x61, 0x73, 0x72, 0x2e, 0x54, 0x72, 0x75, 0x73,
	0x74, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x1a, 0x50,
	0x72, 0x61, 0x74, 0x69, 0x6b, 0x61, 0x73, 0x72, 0x5c, 0x54, 0x72, 0x75, 0x73, 0x74, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x26, 0x50, 0x72, 0x61, 0x74,
	0x69, 0x6b, 0x61, 0x73, 0x72, 0x5c, 0x54, 0x72, 0x75, 0x73, 0x74, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x79, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0xea, 0x02, 0x1c, 0x50, 0x72, 0x61, 0x74, 0x69, 0x6b, 0x61, 0x73, 0x72, 0x3a, 0x3a,
	0x54, 0x72, 0x75, 0x73, 0x74, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x3a, 0x3a, 0x56,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pratikasr_trustregistry_v1_types_proto_rawDescOnce sync.Once
	file_pratikasr_trustregistry_v1_types_proto_rawDescData = file_pratikasr_trustregistry_v1_types_proto_rawDesc
)

func file_pratikasr_trustregistry_v1_types_proto_rawDescGZIP() []byte {
	file_pratikasr_trustregistry_v1_types_proto_rawDescOnce.Do(func() {
		file_pratikasr_trustregistry_v1_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_pratikasr_trustregistry_v1_types_proto_rawDescData)
	})
	return file_pratikasr_trustregistry_v1_types_proto_rawDescData
}

var file_pratikasr_trustregistry_v1_types_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_pratikasr_trustregistry_v1_types_proto_goTypes = []interface{}{
	(*TrustRegistry)(nil),               // 0: pratikasr.trustregistry.v1.TrustRegistry
	(*GovernanceFrameworkVersion)(nil),  // 1: pratikasr.trustregistry.v1.GovernanceFrameworkVersion
	(*GovernanceFrameworkDocument)(nil), // 2: pratikasr.trustregistry.v1.GovernanceFrameworkDocument
	(*Params)(nil),                      // 3: pratikasr.trustregistry.v1.Params
	(*GenesisState)(nil),                // 4: pratikasr.trustregistry.v1.GenesisState
	(*timestamppb.Timestamp)(nil),       // 5: google.protobuf.Timestamp
}
var file_pratikasr_trustregistry_v1_types_proto_depIdxs = []int32{
	5, // 0: pratikasr.trustregistry.v1.TrustRegistry.created:type_name -> google.protobuf.Timestamp
	5, // 1: pratikasr.trustregistry.v1.TrustRegistry.modified:type_name -> google.protobuf.Timestamp
	5, // 2: pratikasr.trustregistry.v1.GovernanceFrameworkVersion.created:type_name -> google.protobuf.Timestamp
	5, // 3: pratikasr.trustregistry.v1.GovernanceFrameworkVersion.active_since:type_name -> google.protobuf.Timestamp
	5, // 4: pratikasr.trustregistry.v1.GovernanceFrameworkDocument.created:type_name -> google.protobuf.Timestamp
	3, // 5: pratikasr.trustregistry.v1.GenesisState.params:type_name -> pratikasr.trustregistry.v1.Params
	0, // 6: pratikasr.trustregistry.v1.GenesisState.trust_registries:type_name -> pratikasr.trustregistry.v1.TrustRegistry
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_pratikasr_trustregistry_v1_types_proto_init() }
func file_pratikasr_trustregistry_v1_types_proto_init() {
	if File_pratikasr_trustregistry_v1_types_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pratikasr_trustregistry_v1_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrustRegistry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pratikasr_trustregistry_v1_types_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GovernanceFrameworkVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pratikasr_trustregistry_v1_types_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GovernanceFrameworkDocument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pratikasr_trustregistry_v1_types_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Params); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pratikasr_trustregistry_v1_types_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenesisState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pratikasr_trustregistry_v1_types_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pratikasr_trustregistry_v1_types_proto_goTypes,
		DependencyIndexes: file_pratikasr_trustregistry_v1_types_proto_depIdxs,
		MessageInfos:      file_pratikasr_trustregistry_v1_types_proto_msgTypes,
	}.Build()
	File_pratikasr_trustregistry_v1_types_proto = out.File
	file_pratikasr_trustregistry_v1_types_proto_rawDesc = nil
	file_pratikasr_trustregistry_v1_types_proto_goTypes = nil
	file_pratikasr_trustregistry_v1_types_proto_depIdxs = nil
}
