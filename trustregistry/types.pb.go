// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: pratikasr/trustregistry/v1/types.proto

package trustregistry

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	github_com_cosmos_gogoproto_types "github.com/cosmos/gogoproto/types"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type TrustRegistry struct {
	Did           string    `protobuf:"bytes,1,opt,name=did,proto3" json:"did,omitempty"`
	Controller    string    `protobuf:"bytes,2,opt,name=controller,proto3" json:"controller,omitempty"`
	Created       time.Time `protobuf:"bytes,3,opt,name=created,proto3,stdtime" json:"created"`
	Modified      time.Time `protobuf:"bytes,4,opt,name=modified,proto3,stdtime" json:"modified"`
	Deposit       int64     `protobuf:"varint,5,opt,name=deposit,proto3" json:"deposit,omitempty"`
	Aka           string    `protobuf:"bytes,6,opt,name=aka,proto3" json:"aka,omitempty"`
	ActiveVersion int32     `protobuf:"varint,7,opt,name=active_version,json=activeVersion,proto3" json:"active_version,omitempty"`
	Language      string    `protobuf:"bytes,8,opt,name=language,proto3" json:"language,omitempty"`
}

func (m *TrustRegistry) Reset()         { *m = TrustRegistry{} }
func (m *TrustRegistry) String() string { return proto.CompactTextString(m) }
func (*TrustRegistry) ProtoMessage()    {}
func (*TrustRegistry) Descriptor() ([]byte, []int) {
	return fileDescriptor_119c7814ed2e7ade, []int{0}
}
func (m *TrustRegistry) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TrustRegistry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TrustRegistry.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TrustRegistry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrustRegistry.Merge(m, src)
}
func (m *TrustRegistry) XXX_Size() int {
	return m.Size()
}
func (m *TrustRegistry) XXX_DiscardUnknown() {
	xxx_messageInfo_TrustRegistry.DiscardUnknown(m)
}

var xxx_messageInfo_TrustRegistry proto.InternalMessageInfo

func (m *TrustRegistry) GetDid() string {
	if m != nil {
		return m.Did
	}
	return ""
}

func (m *TrustRegistry) GetController() string {
	if m != nil {
		return m.Controller
	}
	return ""
}

func (m *TrustRegistry) GetCreated() time.Time {
	if m != nil {
		return m.Created
	}
	return time.Time{}
}

func (m *TrustRegistry) GetModified() time.Time {
	if m != nil {
		return m.Modified
	}
	return time.Time{}
}

func (m *TrustRegistry) GetDeposit() int64 {
	if m != nil {
		return m.Deposit
	}
	return 0
}

func (m *TrustRegistry) GetAka() string {
	if m != nil {
		return m.Aka
	}
	return ""
}

func (m *TrustRegistry) GetActiveVersion() int32 {
	if m != nil {
		return m.ActiveVersion
	}
	return 0
}

func (m *TrustRegistry) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

type GovernanceFrameworkVersion struct {
	Id          string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TrDid       string    `protobuf:"bytes,2,opt,name=tr_did,json=trDid,proto3" json:"tr_did,omitempty"`
	Created     time.Time `protobuf:"bytes,3,opt,name=created,proto3,stdtime" json:"created"`
	Version     int32     `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
	ActiveSince time.Time `protobuf:"bytes,5,opt,name=active_since,json=activeSince,proto3,stdtime" json:"active_since"`
}

func (m *GovernanceFrameworkVersion) Reset()         { *m = GovernanceFrameworkVersion{} }
func (m *GovernanceFrameworkVersion) String() string { return proto.CompactTextString(m) }
func (*GovernanceFrameworkVersion) ProtoMessage()    {}
func (*GovernanceFrameworkVersion) Descriptor() ([]byte, []int) {
	return fileDescriptor_119c7814ed2e7ade, []int{1}
}
func (m *GovernanceFrameworkVersion) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GovernanceFrameworkVersion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GovernanceFrameworkVersion.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GovernanceFrameworkVersion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GovernanceFrameworkVersion.Merge(m, src)
}
func (m *GovernanceFrameworkVersion) XXX_Size() int {
	return m.Size()
}
func (m *GovernanceFrameworkVersion) XXX_DiscardUnknown() {
	xxx_messageInfo_GovernanceFrameworkVersion.DiscardUnknown(m)
}

var xxx_messageInfo_GovernanceFrameworkVersion proto.InternalMessageInfo

func (m *GovernanceFrameworkVersion) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GovernanceFrameworkVersion) GetTrDid() string {
	if m != nil {
		return m.TrDid
	}
	return ""
}

func (m *GovernanceFrameworkVersion) GetCreated() time.Time {
	if m != nil {
		return m.Created
	}
	return time.Time{}
}

func (m *GovernanceFrameworkVersion) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *GovernanceFrameworkVersion) GetActiveSince() time.Time {
	if m != nil {
		return m.ActiveSince
	}
	return time.Time{}
}

type GovernanceFrameworkDocument struct {
	Id       string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	GfvId    string    `protobuf:"bytes,2,opt,name=gfv_id,json=gfvId,proto3" json:"gfv_id,omitempty"`
	Created  time.Time `protobuf:"bytes,3,opt,name=created,proto3,stdtime" json:"created"`
	Language string    `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	Url      string    `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	Hash     string    `protobuf:"bytes,6,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (m *GovernanceFrameworkDocument) Reset()         { *m = GovernanceFrameworkDocument{} }
func (m *GovernanceFrameworkDocument) String() string { return proto.CompactTextString(m) }
func (*GovernanceFrameworkDocument) ProtoMessage()    {}
func (*GovernanceFrameworkDocument) Descriptor() ([]byte, []int) {
	return fileDescriptor_119c7814ed2e7ade, []int{2}
}
func (m *GovernanceFrameworkDocument) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GovernanceFrameworkDocument) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GovernanceFrameworkDocument.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GovernanceFrameworkDocument) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GovernanceFrameworkDocument.Merge(m, src)
}
func (m *GovernanceFrameworkDocument) XXX_Size() int {
	return m.Size()
}
func (m *GovernanceFrameworkDocument) XXX_DiscardUnknown() {
	xxx_messageInfo_GovernanceFrameworkDocument.DiscardUnknown(m)
}

var xxx_messageInfo_GovernanceFrameworkDocument proto.InternalMessageInfo

func (m *GovernanceFrameworkDocument) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GovernanceFrameworkDocument) GetGfvId() string {
	if m != nil {
		return m.GfvId
	}
	return ""
}

func (m *GovernanceFrameworkDocument) GetCreated() time.Time {
	if m != nil {
		return m.Created
	}
	return time.Time{}
}

func (m *GovernanceFrameworkDocument) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *GovernanceFrameworkDocument) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *GovernanceFrameworkDocument) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

// Params defines the parameters of the module.
type Params struct {
	MaxDidLength      uint64 `protobuf:"varint,1,opt,name=max_did_length,json=maxDidLength,proto3" json:"max_did_length,omitempty"`
	MaxLanguageLength uint64 `protobuf:"varint,2,opt,name=max_language_length,json=maxLanguageLength,proto3" json:"max_language_length,omitempty"`
	MaxUrlLength      uint64 `protobuf:"varint,3,opt,name=max_url_length,json=maxUrlLength,proto3" json:"max_url_length,omitempty"`
	MaxHashLength     uint64 `protobuf:"varint,4,opt,name=max_hash_length,json=maxHashLength,proto3" json:"max_hash_length,omitempty"`
}

func (m *Params) Reset()         { *m = Params{} }
func (m *Params) String() string { return proto.CompactTextString(m) }
func (*Params) ProtoMessage()    {}
func (*Params) Descriptor() ([]byte, []int) {
	return fileDescriptor_119c7814ed2e7ade, []int{3}
}
func (m *Params) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Params) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Params.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Params) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Params.Merge(m, src)
}
func (m *Params) XXX_Size() int {
	return m.Size()
}
func (m *Params) XXX_DiscardUnknown() {
	xxx_messageInfo_Params.DiscardUnknown(m)
}

var xxx_messageInfo_Params proto.InternalMessageInfo

func (m *Params) GetMaxDidLength() uint64 {
	if m != nil {
		return m.MaxDidLength
	}
	return 0
}

func (m *Params) GetMaxLanguageLength() uint64 {
	if m != nil {
		return m.MaxLanguageLength
	}
	return 0
}

func (m *Params) GetMaxUrlLength() uint64 {
	if m != nil {
		return m.MaxUrlLength
	}
	return 0
}

func (m *Params) GetMaxHashLength() uint64 {
	if m != nil {
		return m.MaxHashLength
	}
	return 0
}

// GenesisState is the state that must be provided at genesis.
type GenesisState struct {
	Params          Params          `protobuf:"bytes,1,opt,name=params,proto3" json:"params"`
	TrustRegistries []TrustRegistry `protobuf:"bytes,2,rep,name=trust_registries,json=trustRegistries,proto3" json:"trust_registries"`
}

func (m *GenesisState) Reset()         { *m = GenesisState{} }
func (m *GenesisState) String() string { return proto.CompactTextString(m) }
func (*GenesisState) ProtoMessage()    {}
func (*GenesisState) Descriptor() ([]byte, []int) {
	return fileDescriptor_119c7814ed2e7ade, []int{4}
}
func (m *GenesisState) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GenesisState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GenesisState.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GenesisState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenesisState.Merge(m, src)
}
func (m *GenesisState) XXX_Size() int {
	return m.Size()
}
func (m *GenesisState) XXX_DiscardUnknown() {
	xxx_messageInfo_GenesisState.DiscardUnknown(m)
}

var xxx_messageInfo_GenesisState proto.InternalMessageInfo

func (m *GenesisState) GetParams() Params {
	if m != nil {
		return m.Params
	}
	return Params{}
}

func (m *GenesisState) GetTrustRegistries() []TrustRegistry {
	if m != nil {
		return m.TrustRegistries
	}
	return nil
}

func init() {
	proto.RegisterType((*TrustRegistry)(nil), "pratikasr.trustregistry.v1.TrustRegistry")
	proto.RegisterType((*GovernanceFrameworkVersion)(nil), "pratikasr.trustregistry.v1.GovernanceFrameworkVersion")
	proto.RegisterType((*GovernanceFrameworkDocument)(nil), "pratikasr.trustregistry.v1.GovernanceFrameworkDocument")
	proto.RegisterType((*Params)(nil), "pratikasr.trustregistry.v1.Params")
	proto.RegisterType((*GenesisState)(nil), "pratikasr.trustregistry.v1.GenesisState")
}

func init() {
	proto.RegisterFile("pratikasr/trustregistry/v1/types.proto", fileDescriptor_119c7814ed2e7ade)
}

var fileDescriptor_119c7814ed2e7ade = []byte{
	// 656 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x94, 0xcf, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0xe3, 0xc4, 0x4d, 0xd2, 0x4d, 0xff, 0xb1, 0x14, 0xc9, 0x04, 0x29, 0x8d, 0x22, 0xa8,
	0xc2, 0x01, 0x5b, 0x2d, 0x17, 0x0e, 0x08, 0x95, 0xa8, 0xa2, 0x20, 0xf5, 0x80, 0xdc, 0xc2, 0xa1,
	0x97, 0x68, 0x6b, 0x4f, 0x9c, 0x55, 0x6c, 0xaf, 0xb5, 0xbb, 0x36, 0xe9, 0x5b, 0xf4, 0x41, 0x38,
	0xf2, 0x0c, 0xa8, 0x07, 0x0e, 0x15, 0x27, 0x4e, 0x80, 0x5a, 0x89, 0xe7, 0x40, 0xbb, 0xb6, 0x43,
	0x23, 0xb5, 0x08, 0xd4, 0xdb, 0xce, 0xf8, 0x37, 0xb3, 0xdf, 0x37, 0x63, 0x2d, 0xda, 0x4c, 0x38,
	0x91, 0x74, 0x42, 0x04, 0x77, 0x24, 0x4f, 0x85, 0xe4, 0x10, 0x50, 0x21, 0xf9, 0x89, 0x93, 0x6d,
	0x39, 0xf2, 0x24, 0x01, 0x61, 0x27, 0x9c, 0x49, 0x86, 0xdb, 0x33, 0xce, 0x9e, 0xe3, 0xec, 0x6c,
	0xab, 0x7d, 0xdf, 0x63, 0x22, 0x62, 0x62, 0xa8, 0x49, 0x27, 0x0f, 0xf2, 0xb2, 0xf6, 0x7a, 0xc0,
	0x02, 0x96, 0xe7, 0xd5, 0xa9, 0xc8, 0x6e, 0x04, 0x8c, 0x05, 0x21, 0x38, 0x3a, 0x3a, 0x4e, 0x47,
	0x8e, 0xa4, 0x11, 0x08, 0x49, 0xa2, 0x24, 0x07, 0x7a, 0x5f, 0xaa, 0x68, 0xf9, 0x50, 0x5d, 0xe3,
	0x16, 0xd7, 0xe0, 0x35, 0x54, 0xf3, 0xa9, 0x6f, 0x19, 0x5d, 0xa3, 0xbf, 0xe8, 0xaa, 0x23, 0x7e,
	0x86, 0x90, 0xc7, 0x62, 0xc9, 0x59, 0x18, 0x02, 0xb7, 0xaa, 0xea, 0xc3, 0xc0, 0xfa, 0xfa, 0xe9,
	0xc9, 0x7a, 0x21, 0xe0, 0xa5, 0xef, 0x73, 0x10, 0xe2, 0x40, 0x72, 0x1a, 0x07, 0xee, 0x15, 0x16,
	0xbf, 0x40, 0x0d, 0x8f, 0x03, 0x91, 0xe0, 0x5b, 0xb5, 0xae, 0xd1, 0x6f, 0x6d, 0xb7, 0xed, 0x5c,
	0x90, 0x5d, 0x0a, 0xb2, 0x0f, 0x4b, 0x41, 0x83, 0xe6, 0xd9, 0xf7, 0x8d, 0xca, 0xe9, 0x8f, 0x0d,
	0xc3, 0x2d, 0x8b, 0xf0, 0x0e, 0x6a, 0x46, 0xcc, 0xa7, 0x23, 0x0a, 0xbe, 0x65, 0xfe, 0x47, 0x83,
	0x59, 0x15, 0xb6, 0x50, 0xc3, 0x87, 0x84, 0x09, 0x2a, 0xad, 0x85, 0xae, 0xd1, 0xaf, 0xb9, 0x65,
	0xa8, 0x7c, 0x92, 0x09, 0xb1, 0xea, 0xb9, 0x4f, 0x32, 0x21, 0xf8, 0x11, 0x5a, 0x21, 0x9e, 0xa4,
	0x19, 0x0c, 0x33, 0xe0, 0x82, 0xb2, 0xd8, 0x6a, 0x74, 0x8d, 0xfe, 0x82, 0xbb, 0x9c, 0x67, 0xdf,
	0xe7, 0x49, 0xdc, 0x46, 0xcd, 0x90, 0xc4, 0x41, 0x4a, 0x02, 0xb0, 0x9a, 0xba, 0x7a, 0x16, 0xf7,
	0x7e, 0x19, 0xa8, 0xbd, 0xc7, 0x32, 0xe0, 0x31, 0x89, 0x3d, 0x78, 0xc5, 0x49, 0x04, 0x1f, 0x18,
	0x9f, 0x94, 0xa5, 0x2b, 0xa8, 0x3a, 0x1b, 0x6d, 0x95, 0xfa, 0xf8, 0x1e, 0xaa, 0x4b, 0x3e, 0x54,
	0xe3, 0xd6, 0x53, 0x75, 0x17, 0x24, 0xdf, 0xa5, 0xfe, 0xad, 0xc7, 0x66, 0xa1, 0x46, 0xe9, 0xc0,
	0xd4, 0x0e, 0xca, 0x10, 0xef, 0xa1, 0xa5, 0xc2, 0xa2, 0xa0, 0xb1, 0x07, 0x7a, 0x26, 0xff, 0xda,
	0xbe, 0x95, 0x57, 0x1e, 0xa8, 0xc2, 0xde, 0x67, 0x03, 0x3d, 0xb8, 0xc6, 0xe8, 0x2e, 0xf3, 0xd2,
	0x08, 0x62, 0x79, 0x9d, 0xd3, 0x60, 0x94, 0x0d, 0xff, 0x38, 0x0d, 0x46, 0xd9, 0x9b, 0xdb, 0x3b,
	0xbd, 0xba, 0x0b, 0x73, 0x7e, 0x17, 0x6a, 0xc1, 0x29, 0x0f, 0xb5, 0xc5, 0x45, 0x57, 0x1d, 0x31,
	0x46, 0xe6, 0x98, 0x88, 0x71, 0xb1, 0x73, 0x7d, 0xee, 0x7d, 0x34, 0x50, 0xfd, 0x2d, 0xe1, 0x24,
	0x12, 0xf8, 0x21, 0x5a, 0x89, 0xc8, 0x54, 0xad, 0x63, 0x18, 0x42, 0x1c, 0xc8, 0xb1, 0xd6, 0x6f,
	0xba, 0x4b, 0x11, 0x99, 0xee, 0x52, 0x7f, 0x5f, 0xe7, 0xb0, 0x8d, 0xee, 0x2a, 0xaa, 0xbc, 0xa6,
	0x44, 0xab, 0x1a, 0xbd, 0x13, 0x91, 0xe9, 0x7e, 0xf1, 0xa5, 0xe0, 0x8b, 0xae, 0x29, 0x0f, 0x4b,
	0xb4, 0x36, 0xeb, 0xfa, 0x8e, 0x87, 0x05, 0xb5, 0x89, 0x56, 0x15, 0xa5, 0x24, 0x95, 0x98, 0xa9,
	0xb1, 0xe5, 0x88, 0x4c, 0x5f, 0x13, 0x31, 0xce, 0x39, 0x25, 0x77, 0x69, 0x0f, 0x62, 0x10, 0x54,
	0x1c, 0x48, 0x22, 0x01, 0xef, 0xa0, 0x7a, 0xa2, 0xe5, 0x6b, 0xb1, 0xad, 0xed, 0x9e, 0x7d, 0xf3,
	0xfb, 0x61, 0xe7, 0x46, 0x07, 0xa6, 0x1a, 0xa4, 0x5b, 0xd4, 0xe1, 0x23, 0xb4, 0xa6, 0xc1, 0x61,
	0x41, 0x52, 0x10, 0x56, 0xb5, 0x5b, 0xeb, 0xb7, 0xb6, 0x1f, 0xff, 0xad, 0xd7, 0xdc, 0xab, 0x51,
	0xb4, 0x5c, 0x95, 0x57, 0x92, 0x14, 0xc4, 0xe0, 0xf9, 0xd9, 0x45, 0xc7, 0x38, 0xbf, 0xe8, 0x18,
	0x3f, 0x2f, 0x3a, 0xc6, 0xe9, 0x65, 0xa7, 0x72, 0x7e, 0xd9, 0xa9, 0x7c, 0xbb, 0xec, 0x54, 0x8e,
	0x7a, 0x01, 0x95, 0xe3, 0xf4, 0xd8, 0xf6, 0x58, 0xe4, 0xdc, 0xf0, 0x32, 0x1e, 0xd7, 0xf5, 0x4f,
	0xf0, 0xf4, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x44, 0x85, 0x17, 0x09, 0x3b, 0x05, 0x00, 0x00,
}

func (m *TrustRegistry) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TrustRegistry) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TrustRegistry) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Language) > 0 {
		i -= len(m.Language)
		copy(dAtA[i:], m.Language)
		i = encodeVarintTypes(dAtA, i, uint64(len(m.Language)))
		i--
		dAtA[i] = 0x42
	}
	if m.ActiveVersion != 0 {
		i = encodeVarintTypes(dAtA, i, uint64(m.ActiveVersion))
		i--
		dAtA[i] = 0x38
	}
	if len(m.Aka) > 0 {
		i -= len(m.Aka)
		copy(dAtA[i:], m.Aka)
		i = encodeVarintTypes(dAtA, i, uint64(len(m.Aka)))
		i--
		dAtA[i] = 0x32
	}
	if m.Deposit != 0 {
		i = encodeVarintTypes(dAtA, i, uint64(m.Deposit))
		i--
		dAtA[i] = 0x28
	}
	n1, err1 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(m.Modified, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(m.Modified):])
	if err1 != nil {
		return 0, err1
	}
	i -= n1
	i = encodeVarintTypes(dAtA, i, uint64(n1))
	i--
	dAtA[i] = 0x22
	n2, err2 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(m.Created, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(m.Created):])
	if err2 != nil {
		return 0, err2
	}
	i -= n2
	i = encodeVarintTypes(dAtA, i, uint64(n2))
	i--
	dAtA[i] = 0x1a
	if len(m.Controller) > 0 {
		i -= len(m.Controller)
		copy(dAtA[i:], m.Controller)
		i = encodeVarintTypes(dAtA, i, uint64(len(m.Controller)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Did) > 0 {
		i -= len(m.Did)
		copy(dAtA[i:], m.Did)
		i = encodeVarintTypes(dAtA, i, uint64(len(m.Did)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GovernanceFrameworkVersion) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GovernanceFrameworkVersion) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GovernanceFrameworkVersion) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	n3, err3 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(m.ActiveSince, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(m.ActiveSince):])
	if err3 != nil {
		return 0, err3
	}
	i -= n3
	i = encodeVarintTypes(dAtA, i, uint64(n3))
	i--
	dAtA[i] = 0x2a
	if m.Version != 0 {
		i = encodeVarintTypes(dAtA, i, uint64(m.Version))
		i--
		dAtA[i] = 0x20
	}
	n4, err4 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(m.Created, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(m.Created):])
	if err4 != nil {
		return 0, err4
	}
	i -= n4
	i = encodeVarintTypes(dAtA, i, uint64(n4))
	i--
	dAtA[i] = 0x1a
	if len(m.TrDid) > 0 {
		i -= len(m.TrDid)
		copy(dAtA[i:], m.TrDid)
		i = encodeVarintTypes(dAtA, i, uint64(len(m.TrDid)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintTypes(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GovernanceFrameworkDocument) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GovernanceFrameworkDocument) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GovernanceFrameworkDocument) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Hash) > 0 {
		i -= len(m.Hash)
		copy(dAtA[i:], m.Hash)
		i = encodeVarintTypes(dAtA, i, uint64(len(m.Hash)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintTypes(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Language) > 0 {
		i -= len(m.Language)
		copy(dAtA[i:], m.Language)
		i = encodeVarintTypes(dAtA, i, uint64(len(m.Language)))
		i--
		dAtA[i] = 0x22
	}
	n5, err5 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(m.Created, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(m.Created):])
	if err5 != nil {
		return 0, err5
	}
	i -= n5
	i = encodeVarintTypes(dAtA, i, uint64(n5))
	i--
	dAtA[i] = 0x1a
	if len(m.GfvId) > 0 {
		i -= len(m.GfvId)
		copy(dAtA[i:], m.GfvId)
		i = encodeVarintTypes(dAtA, i, uint64(len(m.GfvId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintTypes(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Params) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Params) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Params) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.MaxHashLength != 0 {
		i = encodeVarintTypes(dAtA, i, uint64(m.MaxHashLength))
		i--
		dAtA[i] = 0x20
	}
	if m.MaxUrlLength != 0 {
		i = encodeVarintTypes(dAtA, i, uint64(m.MaxUrlLength))
		i--
		dAtA[i] = 0x18
	}
	if m.MaxLanguageLength != 0 {
		i = encodeVarintTypes(dAtA, i, uint64(m.MaxLanguageLength))
		i--
		dAtA[i] = 0x10
	}
	if m.MaxDidLength != 0 {
		i = encodeVarintTypes(dAtA, i, uint64(m.MaxDidLength))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GenesisState) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GenesisState) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GenesisState) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.TrustRegistries) > 0 {
		for iNdEx := len(m.TrustRegistries) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.TrustRegistries[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTypes(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTypes(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func encodeVarintTypes(dAtA []byte, offset int, v uint64) int {
	offset -= sovTypes(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *TrustRegistry) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Did)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	l = len(m.Controller)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	l = github_com_cosmos_gogoproto_types.SizeOfStdTime(m.Created)
	n += 1 + l + sovTypes(uint64(l))
	l = github_com_cosmos_gogoproto_types.SizeOfStdTime(m.Modified)
	n += 1 + l + sovTypes(uint64(l))
	if m.Deposit != 0 {
		n += 1 + sovTypes(uint64(m.Deposit))
	}
	l = len(m.Aka)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	if m.ActiveVersion != 0 {
		n += 1 + sovTypes(uint64(m.ActiveVersion))
	}
	l = len(m.Language)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}

func (m *GovernanceFrameworkVersion) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	l = len(m.TrDid)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	l = github_com_cosmos_gogoproto_types.SizeOfStdTime(m.Created)
	n += 1 + l + sovTypes(uint64(l))
	if m.Version != 0 {
		n += 1 + sovTypes(uint64(m.Version))
	}
	l = github_com_cosmos_gogoproto_types.SizeOfStdTime(m.ActiveSince)
	n += 1 + l + sovTypes(uint64(l))
	return n
}

func (m *GovernanceFrameworkDocument) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	l = len(m.GfvId)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	l = github_com_cosmos_gogoproto_types.SizeOfStdTime(m.Created)
	n += 1 + l + sovTypes(uint64(l))
	l = len(m.Language)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	l = len(m.Hash)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}

func (m *Params) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MaxDidLength != 0 {
		n += 1 + sovTypes(uint64(m.MaxDidLength))
	}
	if m.MaxLanguageLength != 0 {
		n += 1 + sovTypes(uint64(m.MaxLanguageLength))
	}
	if m.MaxUrlLength != 0 {
		n += 1 + sovTypes(uint64(m.MaxUrlLength))
	}
	if m.MaxHashLength != 0 {
		n += 1 + sovTypes(uint64(m.MaxHashLength))
	}
	return n
}

func (m *GenesisState) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Params.Size()
	n += 1 + l + sovTypes(uint64(l))
	if len(m.TrustRegistries) > 0 {
		for _, e := range m.TrustRegistries {
			l = e.Size()
			n += 1 + l + sovTypes(uint64(l))
		}
	}
	return n
}

func sovTypes(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTypes(x uint64) (n int) {
	return sovTypes(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *TrustRegistry) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TrustRegistry: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TrustRegistry: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Did", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Did = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Controller", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Controller = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Created", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(&m.Created, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Modified", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(&m.Modified, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Deposit", wireType)
			}
			m.Deposit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Deposit |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Aka", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Aka = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActiveVersion", wireType)
			}
			m.ActiveVersion = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ActiveVersion |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Language", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Language = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GovernanceFrameworkVersion) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GovernanceFrameworkVersion: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GovernanceFrameworkVersion: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TrDid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TrDid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Created", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(&m.Created, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Version", wireType)
			}
			m.Version = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Version |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActiveSince", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(&m.ActiveSince, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GovernanceFrameworkDocument) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GovernanceFrameworkDocument: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GovernanceFrameworkDocument: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GfvId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GfvId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Created", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(&m.Created, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Language", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Language = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Hash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Params) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Params: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Params: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxDidLength", wireType)
			}
			m.MaxDidLength = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxDidLength |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxLanguageLength", wireType)
			}
			m.MaxLanguageLength = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxLanguageLength |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxUrlLength", wireType)
			}
			m.MaxUrlLength = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxUrlLength |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxHashLength", wireType)
			}
			m.MaxHashLength = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxHashLength |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GenesisState) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GenesisState: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GenesisState: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TrustRegistries", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TrustRegistries = append(m.TrustRegistries, TrustRegistry{})
			if err := m.TrustRegistries[len(m.TrustRegistries)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTypes(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTypes
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTypes
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTypes
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTypes        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTypes          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTypes = fmt.Errorf("proto: unexpected end of group")
)
